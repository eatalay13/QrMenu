@model ICollection<Category>

@{
    ViewData["Title"] = "Kategoriler";
}

<div class="block-header">
    <h2>
        Ürün Kategorileri
        <small>
            Açıklama
        </small>
    </h2>
</div>

@(Html.DevExtreme().DataGrid<Entities.Models.Category>()
    .DataSource(ds => ds.Mvc()
        .Controller("Categories")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .DeleteAction("Delete")
        .Key("Id")
    )
    .Selection(s => s.Mode(SelectionMode.Multiple))
    .AllowColumnReordering(true)
    .AllowColumnResizing(true)
    .Grouping(g => g.AutoExpandAll(false))
    .GroupPanel(gp => gp.Visible(true))
    .ColumnResizingMode(ColumnResizingMode.Widget)
    .ColumnAutoWidth(true)
    .ShowBorders(true)
    .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )
    .SearchPanel(searchPanel => searchPanel
        .Visible(true)
        .Width(240)
    )
    .Export(e => e.Enabled(true)
        .AllowExportSelectedData(true)
    )
    .HeaderFilter(headerFilter => headerFilter.Visible(true))
    .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
    .RemoteOperations(ro => ro.GroupPaging(true))
    .RowAlternationEnabled(true)
    .Columns(columns => {

        columns.AddFor(m => m.Name).Caption("Kategori Adı");

        columns.AddFor(m => m.ParentCategoryId).Caption("Üst Kategori").Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Categories").LoadAction("Get").Key("Id"))
            .ValueExpr("Id")
            .DisplayExpr("Name")
        );

        columns.AddFor(m => m.SortOrder).Caption("Sıralama");

        columns.AddFor(m => m.Description).Caption("Açıklama");
    })
    .Editing(e => e
        .Mode(GridEditMode.Popup)
        .AllowAdding(true)
        .AllowUpdating(true)
        .AllowDeleting(true)
        .Popup(p => p
                    .Title("Kategori Detay")
                    .ShowTitle(true)
                    .Width(700)
                    .Height(400)
                    .Position(pos => pos
                        .My(HorizontalAlignment.Center, VerticalAlignment.Center)
                        .At(HorizontalAlignment.Center, VerticalAlignment.Center)
                        .Of(new JS("window"))
                    )
              )
    )
)